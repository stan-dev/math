name: System Libraries

on:
  pull_request:
    branches: [ develop, master ]
  push:
    branches: [ develop ]
    paths-ignore:
      - 'doygen/**'
      - 'hooks/**'
      - 'licenses/**'
      - 'LICENSE.md'
      - 'README.md'
      - 'RELEASE-NOTES.txt'
permissions:
  contents: read

jobs:
  system-libraries-fwd-mix:
    permissions:
      actions: write  # for n1hility/cancel-previous-runs to create & stop workflow runs
      contents: read  # for actions/checkout to fetch code
    name: System Library Linking - fwd and non-fun mix tests
    runs-on: ubuntu-22.04

    steps:
    - uses: n1hility/cancel-previous-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'"

    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - name: Install system libraries
      run: |
        # Eigen version in 22.04 repos (3.4) not yet compatible with Stan,
        # manually install 3.3.9 from Debian repositories
        wget http://ftp.de.debian.org/debian/pool/main/e/eigen3/libeigen3-dev_3.3.9-2_all.deb
        sudo dpkg -i ./libeigen3-dev_3.3.9-2_all.deb
        sudo apt-get install -y libboost-all-dev libtbb-dev libsundials-dev ocl-icd-libopencl1 ocl-icd-opencl-dev opencl-c-headers opencl-clhpp-headers
        echo "EIGEN_INC=/usr/include/eigen3/" >> make/local
        echo "BOOST_INC=/usr/include/" >> make/local
        echo "TBB_INC=/usr/include/" >> make/local
        echo "TBB_LIB=/usr/lib/86_64-linux-gnu" >> make/local
        echo "SUNDIALS_INC=/usr/include" >> make/local
        echo "SUNDIALS_LIB=/usr/lib/x86_64-linux-gnu" >> make/local
        echo "OPENCL_INC=/usr/include/" >> make/local
        echo "OPENCL_LIB=/usr/lib/x86_64-linux-gnu" >> make/local
        echo "STAN_OPENCL=true" >> make/local
    - name: Run fwd and non-fun mix tests
      run: |
        python runTests.py -j2 test/unit/math/fwd
        python runTests.py -j2 test/unit/math/mix/core
        python runTests.py -j2 test/unit/math/mix/functor
        python runTests.py -j2 test/unit/math/mix/meta
        python runTests.py -j2 test/unit/math/mix/prob
        python runTests.py -j2 test/unit/math/mix/*_test.cpp
    - name: Upload gtest_output xml
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: gtest_outputs_xml
        path: '**/*_test.xml'
  system-libraries-rev:
    permissions:
      actions: write  # for n1hility/cancel-previous-runs to create & stop workflow runs
      contents: read  # for actions/checkout to fetch code
    name: System Library Linking - rev tests
    runs-on: ubuntu-22.04

    steps:
    - uses: n1hility/cancel-previous-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'"

    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - name: Install system libraries
      run: |
        # Eigen version in 22.04 repos (3.4) not yet compatible with Stan,
        # manually install 3.3.9 from Debian repositories
        wget http://ftp.de.debian.org/debian/pool/main/e/eigen3/libeigen3-dev_3.3.9-2_all.deb
        sudo dpkg -i ./libeigen3-dev_3.3.9-2_all.deb
        sudo apt-get install -y libboost-all-dev libtbb-dev libsundials-dev ocl-icd-libopencl1 ocl-icd-opencl-dev opencl-c-headers opencl-clhpp-headers
        echo "EIGEN_INC=/usr/include/eigen3/" >> make/local
        echo "BOOST_INC=/usr/include/" >> make/local
        echo "TBB_INC=/usr/include/" >> make/local
        echo "TBB_LIB=/usr/lib/86_64-linux-gnu" >> make/local
        echo "SUNDIALS_INC=/usr/include" >> make/local
        echo "SUNDIALS_LIB=/usr/lib/x86_64-linux-gnu" >> make/local
        echo "OPENCL_INC=/usr/include/" >> make/local
        echo "OPENCL_LIB=/usr/lib/x86_64-linux-gnu" >> make/local
        echo "STAN_OPENCL=true" >> make/local
    - name: Run rev tests
      run: |
        python runTests.py -j2 test/unit/math/rev
    - name: Upload gtest_output xml
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: gtest_outputs_xml
        path: '**/*_test.xml'
