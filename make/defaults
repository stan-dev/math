##
# Library locations
##
MATH ?=
EIGEN ?= $(MATH)lib/eigen_3.3.3
BOOST ?= $(MATH)lib/boost_1.66.0
IDAS ?= $(MATH)lib/idas-2.1.0
CVODES ?= $(MATH)lib/cvodes-3.1.0
GTEST ?= $(MATH)lib/gtest_1.7.0
CPPLINT ?= $(MATH)lib/cpplint_4.45

##
# Detect operating system
##
ifneq ($(OS),Windows_NT)
  OS := $(shell uname -s)
endif

##
# Compiler options
##
O ?= 3

INC ?= -I . -I $(EIGEN) -I $(BOOST) $(INC_CVODES) $(INC_IDAS)
INC_CVODES ?= -I $(CVODES)/include
INC_IDAS ?= -I $(IDAS)/include
INC_GTEST ?= -I $(GTEST)/include -I $(GTEST)
CXXFLAGS_LANG ?= -std=c++1y
ifeq ($(OS),Windows_NT)
  CXXFLAGS_WARNINGS ?= -Wall -Wno-unused-function -Wno-uninitialized
else
  CXXFLAGS_WARNINGS ?= -Wall -Wno-unused-function -Wno-uninitialized -Wno-unused-local-typedef
endif
CXXFLAGS_BOOST ?= -DBOOST_RESULT_OF_USE_TR1 -DBOOST_NO_DECLTYPE -DBOOST_DISABLE_ASSERTS -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION
CXXFLAGS_CVODES ?= -DNO_FPRINTF_OUTPUT -pipe
#CXXFLAGS_EIGEN ?=
CXXFLAGS_GTEST ?= -DGTEST_USE_OWN_TR1_TUPLE
#CXXFLAGS_OS ?=


ifeq ($(OS),Windows_NT)
  CXXFLAGS_GTEST += -DGTEST_HAS_PTHREAD=0
  CXXFLAGS_OS ?= -Wno-unused-but-set-variable -Wno-unused-variable
  ## Detecting Process Bitness:
  ## http://blogs.msdn.com/b/david.wang/archive/2006/03/26/howto-detect-process-bitness.aspx
  ifeq ($(PROCESSOR_ARCHITECTURE)$(PROCESSOR_ARCHITEW6432),x86)
    CXXFLAGS_OS += -m32
  else
    CXXFLAGS_OS += -m64
  endif

  ## FIXME(dl): shouldn't `-static-libstdc++` this for cygwin? test.
  LDLIBS ?= -static-libgcc -static-libstdc++

  EXE := .exe
endif

ifeq ($(OS),Darwin)  # Mac OS X
  CXXFLAGS_OS ?= -Wno-unknown-warning-option -Wno-tautological-compare -Wsign-compare\
    -Wno-unneeded-internal-declaration
endif

ifeq ($(OS),Linux)
  CXXFLAGS_GTEST += -DGTEST_HAS_PTHREAD=0
  ifeq (mingw32-g++,$(CXX))
    LDLIBS ?= -static -lwinpthread
    EXE := .exe
  else
    LDLIBS ?= -lpthread
    CXXFLAGS += -stdlib=libc++
  endif
endif

CXXFLAGS := $(CXXFLAGS) $(CXXFLAGS_LANG) $(CXXFLAGS_OS) $(CXXFLAGS_WARNINGS) $(CXXFLAGS_BOOST) $(CXXFLAGS_CVODES) $(CXXFLAGS_EIGEN) -O$(O) $(INC)
