GTEST_MAIN := $(GTEST)/src/gtest_main.cc

##
# Build the google test library.
##
$(GTEST)/src/gtest-all.o: CXXFLAGS += $(CXXFLAGS_GTEST) $(INC_GTEST)

##
# Build test executables
##
test/%$(EXE) : CXXFLAGS += $(CXXFLAGS_GTEST) $(INC_GTEST)
test/%$(EXE): test/%.cpp $(GTEST_MAIN) $(GTEST)/src/gtest-all.o
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

DEPFLAGS = -MT $@ -MM -MG -MP -MF $@
test/%.d: test/%.cpp
	$(COMPILE.cpp) $(DEPFLAGS) $<

-include $(patsubst %$(EXE),%.d,$(filter test/%,$(MAKECMDGOALS)))


############################################################
# CVODES tests
#   Add linking of LIBCVODES to the executable
##

CVODES_TESTS := $(subst .cpp,$(EXE),$(shell find test -name *cvodes*_test.cpp) $(shell find test -name *_bdf_*_test.cpp) $(shell find test -name *_adams_*_test.cpp))
$(CVODES_TESTS) : $(LIBCVODES)

############################################################
#
# IDAS tests
##

IDAS_TESTS := $(subst .cpp,$(EXE),$(shell find test -name *idas*_test.cpp) $(shell find test -name *_dae_*_test.cpp))
$(IDAS_TESTS) : $(LIBIDAS)

############################################################
#
# Target to verify header files within Stan has
# enough include calls
##
HEADER_TESTS := $(addsuffix -test,$(shell find stan -name '*.hpp' -type f))

ifeq ($(OS),Windows_NT)
  DEV_NULL = nul
else
  DEV_NULL = /dev/null
endif

.PHONY: HEADER_TESTS
%.hpp-test : %.hpp test/dummy.cpp
	$(COMPILE.cpp) -O0 -include $^ -o $(DEV_NULL)

test/dummy.cpp:
	@mkdir -p test
	@touch $@
	@echo "int main() {return 0;}" >> $@

.PHONY: test-headers
test-headers: $(HEADER_TESTS)

############################################################
##
# Test generator for distribution tests
##
test/prob/generate_tests$(EXE) : test/prob/generate_tests.cpp
	$(LINK.cpp) $< $(OUTPUT_OPTION)

test/prob/%.hpp : test/prob/generate_tests$(EXE)


## FIXME: think about how to do this generally using test_types
# test_types := v fd fv ffd ffv

test_name = $(shell echo $(1) | sed 's,_[0-9]\{5\},_test.hpp,g')

.SECONDEXPANSION:
test/prob/%_generated_v_test.cpp test/prob/%_generated_fd_test.cpp test/prob/%_generated_fv_test.cpp test/prob/%_generated_ffd_test.cpp test/prob/%_generated_ffv_test.cpp: test/prob/$$(call test_name,$$*) test/prob/generate_tests$(EXE)
	$(WINE) test/prob/generate_tests$(EXE) $< $(N_TESTS)

LIST_OF_GENERATED_TESTS := $(shell find test/prob -type f -name '*_test.hpp' | sed 's,_test.hpp,_00000_generated_v_test.cpp,g') $(shell find test/prob -type f -name '*_test.hpp' | sed 's,_test.hpp,_00000_generated_fd_test.cpp,g') $(shell find test/prob -type f -name '*_test.hpp' | sed 's,_test.hpp,_00000_generated_fv_test.cpp,g') $(shell find test/prob -type f -name '*_test.hpp' | sed 's,_test.hpp,_00000_generated_ffd_test.cpp,g') $(shell find test/prob -type f -name '*_test.hpp' | sed 's,_test.hpp,_00000_generated_ffv_test.cpp,g')

.PHONY: generate-tests
generate-tests: $(LIST_OF_GENERATED_TESTS)

##
# Include the test dependencies
##
include make/test-math-dependencies
